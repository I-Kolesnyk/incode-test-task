{"version":3,"file":"static/js/663.638eec00.chunk.js","mappings":"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","sources":["hooks/useAppDispatch.ts","hooks/useAppSelector.ts","hooks/useNewUser.ts","schemas/SignInSchema.tsx","schemas/SignUpSchema.tsx","components/LoginForm/LoginForm.tsx","components/LoginView/LoginView.tsx","components/RegisterForm/RegisterForm.tsx","components/RegistrationView/RegistrationView.tsx","pages/AuthPage/AuthPage.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from 'types';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from 'types';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { useAppSelector } from \"./useAppSelector\";\r\nimport { selectIsNewUser } from \"redux/auth/selectors\";\r\n\r\nexport const useNewUser = () => useAppSelector(selectIsNewUser);","import * as yup from 'yup';\r\nimport { validationErrors } from 'utils';\r\n\r\nconst { required } = validationErrors;\r\n\r\nexport const SignInSchema = yup.object().shape({\r\n  username: yup.string().required(required),\r\n  password: yup.string().required(required),\r\n});\r\n","import * as yup from 'yup';\r\nimport { validationErrors, passwordRegex } from 'utils';\r\n\r\nconst {\r\n  minFullName,\r\n  maxFullName,\r\n  required,\r\n  minUsername,\r\n  maxUsername,\r\n  minPassword,\r\n  maxPassword,\r\n  matchPassword,\r\n  confirm,\r\n} = validationErrors;\r\n\r\nexport const SignUpSchema = yup.object().shape({\r\n  displayName: yup\r\n    .string()\r\n    .required(required)\r\n    .min(3, minFullName)\r\n    .max(20, maxFullName),\r\n  username: yup\r\n    .string()\r\n    .required(required)\r\n    .min(3, minUsername)\r\n    .max(20, maxUsername),\r\n  password: yup\r\n    .string()\r\n    .required(required)\r\n    .min(3, minPassword)\r\n    .max(20, maxPassword)\r\n    .matches(passwordRegex, matchPassword),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password')], confirm)\r\n    .required(required),\r\n});\r\n","import React, { FC, useCallback } from 'react';\r\nimport { useForm, Controller, SubmitHandler } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { IUserLogin } from 'types';\r\nimport { userSignIn } from 'redux/auth/operations';\r\nimport { useAppDispatch } from 'hooks';\r\nimport { SignInSchema } from 'schemas';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\nconst LoginForm: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    mode: 'onTouched',\r\n    resolver: yupResolver(SignInSchema),\r\n  });\r\n\r\n  const loginUser: SubmitHandler<IUserLogin> = useCallback(\r\n    user => {\r\n      dispatch(userSignIn(user));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Form onFinish={handleSubmit(loginUser)} layout=\"vertical\">\r\n      <Controller\r\n        name=\"username\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        render={({ field }) => (\r\n          <Form.Item name=\"username\" label={<label>User name</label>}>\r\n            <Input {...field} placeholder={'Example123'} />\r\n          </Form.Item>\r\n        )}\r\n      />\r\n      <p>{errors.username?.message}</p>\r\n      <Controller\r\n        name=\"password\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Form.Item name=\"password\" label={<label>Password</label>}>\r\n            <Input.Password {...field} placeholder={'***************'} />\r\n          </Form.Item>\r\n        )}\r\n      />\r\n      <p>{errors.password?.message}</p>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Sign In\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { FC } from 'react';\r\nimport { useAppDispatch } from 'hooks';\r\nimport { setIsNewUser } from 'redux/auth/slice';\r\nimport LoginForm from 'components/LoginForm';\r\nimport { Typography, Button, Space } from 'antd';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst LoginView :FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleRegistration = () => {\r\n    dispatch(setIsNewUser(true))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title level={1}>Sign in</Title>\r\n      <LoginForm />\r\n      <Space align={'center'} direction={'horizontal'}>\r\n        <Paragraph>\r\n          <p>Don’t have account yet?</p>\r\n        </Paragraph>\r\n        <Button type=\"link\" block onClick={handleRegistration}>\r\n          New Account\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { FC } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { IUserRegistration } from 'types';\r\nimport { userSignUp } from 'redux/auth/operations';\r\nimport { setIsNewUser } from 'redux/auth/slice';\r\nimport { useAppDispatch } from 'hooks';\r\nimport { SignUpSchema } from 'schemas';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\nconst RegisterForm: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IUserRegistration>({\r\n    defaultValues: {\r\n      username: '',\r\n      displayName: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    mode: 'onTouched',\r\n    resolver: yupResolver(SignUpSchema),\r\n  });\r\n\r\n  const registerUser = (user: IUserRegistration) => {\r\n    console.log(user);\r\n    dispatch(\r\n      userSignUp({\r\n        password: user.password,\r\n        username: user.username,\r\n        displayName: user.displayName,\r\n      })\r\n    );   \r\n\r\n    setTimeout(() => {\r\n      dispatch(setIsNewUser(false));\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={handleSubmit(registerUser)} layout=\"vertical\">\r\n      <Controller\r\n        name=\"displayName\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Form.Item name=\"displayName\" label={<label>Full name</label>}>\r\n            <Input {...field} placeholder={'Example Name'} />\r\n          </Form.Item>\r\n        )}\r\n      />\r\n      <p>{errors.displayName?.message}</p>\r\n      <Controller\r\n        name=\"username\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Form.Item name=\"username\" label={<label>User name</label>}>\r\n            <Input {...field} placeholder={'Example123'} />\r\n          </Form.Item>\r\n        )}\r\n      />\r\n      <p>{errors.username?.message}</p>\r\n      <Controller\r\n        name=\"password\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Form.Item name=\"password\" label={<label>Password</label>}>\r\n            <Input.Password {...field} placeholder={'***************'} />\r\n          </Form.Item>\r\n        )}\r\n      />\r\n      <p>{errors.password?.message}</p>\r\n      <Controller\r\n        name=\"confirmPassword\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Form.Item\r\n            name=\"confirmPassword\"\r\n            label={<label>Confirm password</label>}\r\n          >\r\n            <Input.Password {...field} placeholder={'***************'} />\r\n          </Form.Item>\r\n        )}\r\n      />\r\n      <p>{errors.confirmPassword?.message}</p>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Sign Up\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { FC } from 'react';\r\nimport { useAppDispatch } from 'hooks';\r\nimport { setIsNewUser } from 'redux/auth/slice';\r\nimport { Typography, Button, Space } from 'antd';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nimport RegisterForm from 'components/RegisterForm';\r\n\r\nconst RegistrationView: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSignIn = () => {\r\n    dispatch(setIsNewUser(false))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title level={1}>Sign up</Title>      \r\n        <RegisterForm />\r\n        <Space align={'center'} direction={'horizontal'}>\r\n        <Paragraph>\r\n          <p>I have an account.</p>\r\n        </Paragraph>\r\n        <Button type=\"link\" block onClick={handleSignIn}>\r\n          Go to Sign in\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationView;\r\n","import React, {FC} from 'react';\r\nimport { useNewUser } from 'hooks';\r\nimport LoginView from 'components/LoginView';\r\nimport RegistrationView from 'components/RegistrationView';\r\n\r\nconst AuthPage : FC = () => {\r\n\r\n  const isNewUser = useNewUser();\r\n \r\n  return (\r\n    <>\r\n    {isNewUser ? <RegistrationView/> : <LoginView/> }      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","useNewUser","selectIsNewUser","required","validationErrors","SignInSchema","yup","shape","username","password","minFullName","maxFullName","minUsername","maxUsername","minPassword","maxPassword","matchPassword","confirm","SignUpSchema","displayName","min","max","matches","passwordRegex","confirmPassword","oneOf","_errors$username","_errors$password","dispatch","_useForm","useForm","defaultValues","mode","resolver","yupResolver","control","handleSubmit","errors","formState","loginUser","useCallback","user","userSignIn","_jsxs","Form","onFinish","layout","children","_jsx","Controller","name","defaultValue","render","_ref","field","label","Input","_objectSpread","placeholder","message","_ref2","Button","type","htmlType","Title","Typography","Paragraph","_Fragment","level","LoginForm","Space","align","direction","block","onClick","setIsNewUser","_errors$displayName","_errors$confirmPasswo","console","log","userSignUp","setTimeout","_ref3","_ref4","RegisterForm","isNewUser","RegistrationView","LoginView"],"sourceRoot":""}